services:
  # PDF Processor - Python service for PDF analysis and image extraction
  pdf-processor:
    build:
      context: ./services/pdf-processor
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - DEBUG=false
      - PYTHONUNBUFFERED=1
    volumes:
      - ./example-files:/app/example-files:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request, sys; urllib.request.urlopen('http://localhost:3002/health'); print('OK')"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3

  # Backend - Consolidated Express TypeScript API for all operations
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env.local
    environment:
      - NODE_ENV=production
      - PORT=3000
      - PDF_PROCESSOR_URL=http://pdf-processor:3002
      - MONGODB_URI=mongodb://mongodb:27017/dehn
      - STORAGE_ROOT=/app/storage
    depends_on:
      - pdf-processor
      - mongodb
    volumes:
      - storage_data:/app/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 3

  # Frontend - Consolidated React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    environment:
      - VITE_BACKEND_URL=http://backend:3000
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 3

  # MongoDB - Document database
  mongodb:
    image: mongo:7-jammy
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=dehn
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 3

volumes:
  mongodb_data:
  storage_data:
