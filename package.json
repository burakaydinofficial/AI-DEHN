{
  "name": "dehn-hackathon",
  "version": "1.0.0",
  "description": "DEHN Hackathon - Multi-service document processing application",
  "private": true,
  "workspaces": [
    "services/admin-backend",
    "services/user-backend",
    "apps/admin-frontend",
    "apps/mobile-frontend",
    "packages/api-models",
    "packages/ai-agent"
  ],
  "scripts": {
    "setup": "scripts/setup-dev.sh",
    "dev": "docker compose up --build",
    "dev:local": "npm run env:check && concurrently -n \"PDF,Admin,User,AdminUI,MobileUI\" -c \"magenta,blue,green,yellow,cyan\" \"npm run dev:pdf\" \"npm run dev:admin-backend\" \"npm run dev:user-backend\" \"npm run dev:admin-frontend\" \"npm run dev:mobile-frontend\"",
    "dev:services": "npm run env:check && concurrently -n \"PDF,Admin,User\" -c \"magenta,blue,green\" \"npm run dev:pdf\" \"npm run dev:admin-backend\" \"npm run dev:user-backend\"",
    "dev:frontend": "concurrently -n \"AdminUI,MobileUI\" -c \"yellow,cyan\" \"npm run dev:admin-frontend\" \"npm run dev:mobile-frontend\"",
    "dev:pdf": "cd services/pdf-processor && source venv/bin/activate && python main.py",
    "dev:admin-backend": "cd services/admin-backend && npm run dev",
    "dev:user-backend": "cd services/user-backend && npm run dev",
    "dev:admin-frontend": "cd apps/admin-frontend && npm run dev",
    "dev:mobile-frontend": "cd apps/mobile-frontend && npm run dev",
    "env:check": "node -e \"if(!require('fs').existsSync('.env.local')){console.error('❌ .env.local not found! Run npm run setup first.');process.exit(1);}console.log('✅ Environment configured');\"",
    "build": "npm run build:packages && npm run build:services && npm run build:apps",
    "build:packages": "npm run build --workspaces --if-present packages/*",
    "build:services": "npm run build --workspaces --if-present services/*",
    "build:apps": "npm run build --workspaces --if-present apps/*",
    "test": "npm run test --workspaces --if-present",
    "test:pdf": "curl -X POST -F \"file=@example-files/example-flyer.pdf\" http://localhost:3095/extract",
    "test:pdf-zip": "curl -X POST -F \"file=@example-files/example-manual.pdf\" -F \"extract_images=true\" http://localhost:3095/extract/zip --output pdf-test-result.zip && echo 'ZIP file saved as pdf-test-result.zip'",
    "lint": "npm run lint --workspaces --if-present",
    "type-check": "npm run type-check --workspaces --if-present",
    "clean": "npm run clean --workspaces --if-present && rm -rf node_modules",
    "install:python": "cd services/pdf-processor && pip install -r requirements.txt",
    "terraform:setup": "cd infrastructure/terraform && ./setup.sh",
    "terraform:build": "cd infrastructure/terraform && ./build-and-push.sh",
    "terraform:plan": "cd infrastructure/terraform && terraform plan",
    "terraform:apply": "cd infrastructure/terraform && terraform apply",
    "terraform:destroy": "cd infrastructure/terraform && terraform destroy",
    "deploy:gcp": "npm run terraform:build && npm run terraform:apply",
    "docker:up": "docker compose up --build",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f",
    "docker:clean": "docker compose down -v --rmi all --remove-orphans",
    "docker:prod": "docker compose -f docker-compose.yml -f docker-compose.prod.yml up --build"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "@types/node": "^20.11.0",
    "typescript": "^5.3.0",
    "eslint": "^8.56.0",
    "prettier": "^3.2.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "packageManager": "yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e"
}
